// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393
#include <RcppArmadillo.h>

using namespace Rcpp;
using namespace arma;
using namespace std;

// clusterl0
List clusterl0(vector<mat> data, uvec svs, int sz, int seed, int maxIter, double thres, int debug);
RcppExport SEXP mvcluster_clusterl0(SEXP data_, SEXP svs_, SEXP sz_, SEXP seed_, SEXP maxIter_, SEXP thres_, SEXP debug_) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    vector<mat> data = as<vector<mat>>(data_);
    uvec svs = as<uvec>(svs_);
    int sz = as<int>(sz_),seed = as<int>(seed_), maxIter = as<int>(maxIter_), debug = as<int>(debug_);
    double thres = as<double>(thres_);
    __result = Rcpp::wrap(clusterl0(data, svs, sz, seed, maxIter, thres, debug));
    return __result;
END_RCPP
}

List clusterl1(vector<mat> data, fvec lus, fvec lvs, float lz, int maxOuter, double thresOuter, int maxInner, double thresInner, int debug);
RcppExport SEXP mvcluster_clusterl1(SEXP data_,SEXP lus_,SEXP lvs_, SEXP lz_, SEXP maxOuter_, SEXP thresOuter_, SEXP maxInner_, SEXP thresInner_, SEXP debug_) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    vector<mat> data = as<vector<mat>>(data_);
    fvec lus = as<fvec>(lus_), lvs = as<fvec>(lvs_);
    float lz = as<float>(lz_);
    int maxOuter = as<int>(maxOuter_), maxInner = as<int>(maxInner_), debug = as<int>(debug_);
    double thresOuter = as<double>(thresOuter_), thresInner = as<double>(thresInner_);
    __result = Rcpp::wrap(clusterl1(data, lus, lvs, lz, maxOuter, thresOuter, maxInner, thresInner, debug));
    return __result;
END_RCPP
}

List cMvSsvd(vector<mat> data, fvec lvs, float lz, int maxOuter, double thresOuter, int maxInner, double thresInner, int debug);
RcppExport SEXP mvcluster_cMvSsvd(SEXP data_,SEXP lvs_, SEXP lz_, SEXP maxOuter_, SEXP thresOuter_, SEXP maxInner_, SEXP thresInner_, SEXP debug_) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    vector<mat> data = as<vector<mat>>(data_);
    fvec lvs = as<fvec>(lvs_);
    float lz = as<float>(lz_);
    int maxOuter = as<int>(maxOuter_), maxInner = as<int>(maxInner_), debug = as<int>(debug_);
    double thresOuter = as<double>(thresOuter_), thresInner = as<double>(thresInner_);
    __result = Rcpp::wrap(cMvSsvd(data, lvs, lz, maxOuter, thresOuter, maxInner, thresInner, debug));
    return __result;
END_RCPP
}
